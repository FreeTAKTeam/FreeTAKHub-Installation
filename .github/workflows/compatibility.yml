---
name: COMPATIBILITY

"on":
  pull_request:
  push:
    branches:
      - "*"

jobs:
  molecule_compatibility_test:
    name: Install on Ubuntu Docker Images
    runs-on: ubuntu-latest
    continue-on-error: true
    if: ${{ contains(github.event.head_commit.message, '#compat') }}
    strategy:
      fail-fast: false
      matrix:
        distros:
          - ubuntu2004
          - ubuntu1804
          - ubuntu1604
          - ubuntu1404
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v2

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install test dependencies
        run: pip3 install ansible molecule[docker,lint] docker

      - name: Run Molecule Install Test - Linux Playbook with Separation of Concern
        run: ANSIBLE_VERBOSITY=1 molecule test --scenario-name multiple_machines -- -e "webmap_force_install=true"
        env:
          MOLECULE_DISTRO: ${{ matrix.distros }}
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"

  vagrant_zero_touch:
    name: Zero Touch Install on Ubuntu VMs
    continue-on-error: true
    if: ${{ contains(github.event.head_commit.message, '#compat') }}
    runs-on: macos-10.15
    strategy:
      fail-fast: false
      matrix:
        distros:
          - 'ubuntu/trusty32'
          - 'ubuntu/trusty64'
          - 'ubuntu/xenial32'
          - 'ubuntu/xenial64'
          - 'ubuntu/bionic64'
          - 'ubuntu/focal64'
          - 'ubuntu/impish64'
          - 'ubuntu/jammy64'

    steps:
      - name: Check out the codebase
        uses: actions/checkout@v2

      - name: Cache Vagrant boxes
        uses: actions/cache@v2
        with:
          path: ~/.vagrant.d/boxes
          key: ${{ runner.os }}-vagrant-${{ hashFiles('Vagrantfile') }}
          restore-keys: |
            ${{ runner.os }}-vagrant-

      - name: Run vagrant up
        run: |
          echo "IMAGE_DISTRO=${IMAGE_DISTRO}"
          IFS="/" read VAGRANTUSER VAGRANTBOX <<< "${IMAGE_DISTRO}"
          echo "VAGRANTUSER=${VAGRANTUSER}"
          echo "VAGRANTBOX=${VAGRANTBOX}"
          echo "VAGRANTUSER=${VAGRANTUSER}" >> $GITHUB_ENV
          echo "VAGRANTBOX=${VAGRANTBOX}" >> $GITHUB_ENV
          VAGRANTUSER=$VAGRANTUSER VAGRANTBOX=$VAGRANTBOX vagrant up --color
        env:
          IMAGE_DISTRO: ${{ matrix.distros }}

      - name: Test Zero Touch Install
        run: vagrant ssh -c "wget -qO - bit.ly/ftszerotouchtest | sudo bash -s -- --non-interactive --dev-test -v"

  vagrant_advanced:
    name: Advanced Install on Ubuntu VMs
    runs-on: macos-10.15
    continue-on-error: true
    if: ${{ contains(github.event.head_commit.message, '#compat') }}
    strategy:
      fail-fast: false
      matrix:
        distros:
          - 'ubuntu/trusty32'
          - 'ubuntu/trusty64'
          - 'ubuntu/xenial32'
          - 'ubuntu/xenial64'
          - 'ubuntu/bionic64'
          - 'ubuntu/focal64'
          - 'ubuntu/impish64'
          - 'ubuntu/jammy64'

    steps:
      - name: Check out the codebase
        uses: actions/checkout@v2

      - name: Cache Vagrant boxes
        uses: actions/cache@v2
        with:
          path: ~/.vagrant.d/boxes
          key: ${{ runner.os }}-vagrant-${{ hashFiles('Vagrantfile') }}
          restore-keys: |
            ${{ runner.os }}-vagrant-

      - name: Run vagrant up
        run: |
          echo "IMAGE_DISTRO=${IMAGE_DISTRO}"
          IFS="/" read VAGRANTUSER VAGRANTBOX <<< "${IMAGE_DISTRO}"
          echo "VAGRANTUSER=${VAGRANTUSER}"
          echo "VAGRANTBOX=${VAGRANTBOX}"
          echo "VAGRANTUSER=${VAGRANTUSER}" >> $GITHUB_ENV
          echo "VAGRANTBOX=${VAGRANTBOX}" >> $GITHUB_ENV
          VAGRANTUSER=$VAGRANTUSER VAGRANTBOX=$VAGRANTBOX vagrant up --color
        env:
          IMAGE_DISTRO: ${{ matrix.distros }}

      - name: Test Zero Touch Advanced Install
        run: vagrant ssh -c "wget -qO - bit.ly/zerotouchadvancedtest | sudo bash -s -- --non-interactive --dev-test -v"
